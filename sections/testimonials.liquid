<div class="testimonials">
  <div class="testimonials__wrapper">
    {%- if section.settings.heading != blank -%}
      <h2 class="testimonials__heading">{{ section.settings.heading | escape }}</h2>
    {%- endif -%}
    
    <div class="testimonials__slider" data-testimonial-slider>
      <div class="testimonials__track">
        {%- for block in section.blocks -%}
          <div class="testimonials__slide" {{ block.shopify_attributes }}>
            <div class="testimonials__card">
              <div class="testimonials__rating">
                {%- for i in (1..5) -%}
                  <svg class="testimonials__star{% if i <= block.settings.rating %} testimonials__star--filled{% endif %}" width="20" height="20" viewBox="0 0 20 20" fill="none">
                    <path d="M10 1L12.39 6.26L18.18 7.35L14.09 11.04L15.18 16.81L10 14L4.82 16.81L5.91 11.04L1.82 7.35L7.61 6.26L10 1Z" fill="currentColor"/>
                  </svg>
                {%- endfor -%}
              </div>
              
              {%- if block.settings.quote != blank -%}
                <blockquote class="testimonials__quote">
                  "{{ block.settings.quote }}"
                </blockquote>
              {%- endif -%}
              
              <div class="testimonials__author">
                {%- if block.settings.author != blank -%}
                  <cite class="testimonials__author-name">{{ block.settings.author | escape }}</cite>
                {%- endif -%}
                
                {%- if block.settings.author_info != blank -%}
                  <span class="testimonials__author-info">{{ block.settings.author_info | escape }}</span>
                {%- endif -%}
              </div>
            </div>
          </div>
        {%- endfor -%}
      </div>
      
      {%- if section.blocks.size > 1 -%}
        <button class="testimonials__nav testimonials__nav--prev" aria-label="Previous testimonial">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path d="M15 18l-6-6 6-6" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
        
        <button class="testimonials__nav testimonials__nav--next" aria-label="Next testimonial">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path d="M9 18l6-6-6-6" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
        
        <div class="testimonials__dots">
          {%- for block in section.blocks -%}
            <button class="testimonials__dot" aria-label="Go to testimonial {{ forloop.index }}"></button>
          {%- endfor -%}
        </div>
      {%- endif -%}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Testimonials",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "What Our Customers Say"
    }
  ],
  "blocks": [
    {
      "type": "testimonial",
      "name": "Testimonial",
      "settings": [
        {
          "type": "range",
          "id": "rating",
          "label": "Rating",
          "min": 1,
          "max": 5,
          "step": 1,
          "default": 5
        },
        {
          "type": "textarea",
          "id": "quote",
          "label": "Quote",
          "default": "This product exceeded my expectations! The quality is amazing and shipping was super fast."
        },
        {
          "type": "text",
          "id": "author",
          "label": "Author name",
          "default": "John D."
        },
        {
          "type": "text",
          "id": "author_info",
          "label": "Author info",
          "default": "Verified Buyer"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Testimonials",
      "blocks": [
        {
          "type": "testimonial"
        },
        {
          "type": "testimonial"
        },
        {
          "type": "testimonial"
        }
      ]
    }
  ]
}
{% endschema %}

{% stylesheet %}
.testimonials {
  padding: var(--mobile-section-padding) 0;
  background-color: var(--color-background);
}

.testimonials__wrapper {
  max-width: var(--page-width);
  margin: 0 auto;
  padding: 0 var(--page-margin);
}

.testimonials__heading {
  text-align: center;
  margin-bottom: 2rem;
}

.testimonials__slider {
  position: relative;
  overflow: hidden;
}

.testimonials__track {
  display: flex;
  transition: transform 0.3s ease;
}

.testimonials__slide {
  flex: 0 0 100%;
  padding: 0 1rem;
}

.testimonials__card {
  background-color: var(--color-background);
  border: 1px solid var(--color-border);
  border-radius: var(--card-border-radius);
  padding: 2rem;
  text-align: center;
  box-shadow: var(--shadow-sm);
}

.testimonials__rating {
  display: flex;
  justify-content: center;
  gap: 0.25rem;
  margin-bottom: 1rem;
}

.testimonials__star {
  color: #e0e0e0;
}

.testimonials__star--filled {
  color: #ffc107;
}

.testimonials__quote {
  font-size: 1.125rem;
  line-height: 1.6;
  margin: 0 0 1.5rem;
  color: var(--color-foreground);
}

.testimonials__author {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.testimonials__author-name {
  font-style: normal;
  font-weight: 600;
  color: var(--color-foreground);
}

.testimonials__author-info {
  font-size: 0.875rem;
  color: var(--color-secondary);
}

/* Navigation */
.testimonials__nav {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background-color: var(--color-background);
  border: 1px solid var(--color-border);
  border-radius: 50%;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  z-index: 2;
}

.testimonials__nav:hover {
  background-color: var(--color-primary);
  color: #ffffff;
  border-color: var(--color-primary);
}

.testimonials__nav--prev {
  left: 0;
}

.testimonials__nav--next {
  right: 0;
}

.testimonials__dots {
  display: flex;
  justify-content: center;
  gap: 0.5rem;
  margin-top: 1.5rem;
}

.testimonials__dot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  border: none;
  background-color: var(--color-border);
  cursor: pointer;
  transition: background-color 0.2s ease;
  padding: 0;
}

.testimonials__dot--active {
  background-color: var(--color-primary);
}

/* Tablet and Desktop */
@media (min-width: 768px) {
  .testimonials {
    padding: var(--desktop-section-padding) 0;
  }
  
  .testimonials__slide {
    flex: 0 0 50%;
  }
  
  .testimonials__nav {
    width: 48px;
    height: 48px;
  }
}

@media (min-width: 1024px) {
  .testimonials__slide {
    flex: 0 0 33.333%;
  }
  
  .testimonials__card {
    padding: 2.5rem;
  }
  
  .testimonials__quote {
    font-size: 1.25rem;
  }
}
{% endstylesheet %}

{% javascript %}
document.addEventListener('DOMContentLoaded', function() {
  const sliders = document.querySelectorAll('[data-testimonial-slider]');
  
  sliders.forEach((slider) => {
    const track = slider.querySelector('.testimonials__track');
    const slides = slider.querySelectorAll('.testimonials__slide');
    const prevBtn = slider.querySelector('.testimonials__nav--prev');
    const nextBtn = slider.querySelector('.testimonials__nav--next');
    const dots = slider.querySelectorAll('.testimonials__dot');
    
    if (!track || slides.length <= 1) return;
    
    let currentIndex = 0;
    const slidesPerView = window.innerWidth >= 1024 ? 3 : window.innerWidth >= 768 ? 2 : 1;
    const maxIndex = Math.max(0, slides.length - slidesPerView);
    
    function updateSlider() {
      const translateX = -(currentIndex * (100 / slidesPerView));
      track.style.transform = `translateX(${translateX}%)`;
      
      dots.forEach((dot, index) => {
        dot.classList.toggle('testimonials__dot--active', index === currentIndex);
      });
    }
    
    function goToSlide(index) {
      currentIndex = Math.max(0, Math.min(index, maxIndex));
      updateSlider();
    }
    
    prevBtn?.addEventListener('click', () => goToSlide(currentIndex - 1));
    nextBtn?.addEventListener('click', () => goToSlide(currentIndex + 1));
    
    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => goToSlide(index));
    });
    
    // Initialize
    updateSlider();
    
    // Auto-play
    setInterval(() => {
      goToSlide(currentIndex >= maxIndex ? 0 : currentIndex + 1);
    }, 5000);
  });
});
{% endjavascript %}